const std = @import("std");
const sudoku = @import("root.zig");

pub const std_options = .{ .log_level = .info };

pub fn main() !void {
    const boards = .{
        sudoku.Board(25){
            .cells = [25][25]u8{
                [_]u8{ 0, 12, 0, 0, 0, 0, 3, 0, 4, 10, 25, 17, 21, 14, 22, 20, 0, 18, 0, 0, 0, 0, 15, 0, 0 },
                [_]u8{ 19, 10, 7, 0, 21, 5, 14, 0, 0, 0, 0, 0, 0, 2, 15, 13, 17, 8, 0, 24, 0, 0, 0, 3, 0 },
                [_]u8{ 23, 0, 0, 0, 8, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 25, 4, 11, 16, 0, 19, 22, 0, 0, 14 },
                [_]u8{ 22, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 2, 0, 25, 24, 0, 0 },
                [_]u8{ 0, 9, 13, 11, 0, 0, 0, 0, 6, 0, 0, 0, 0, 20, 24, 3, 0, 15, 14, 0, 21, 7, 2, 0, 0 },
                [_]u8{ 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 13, 23, 19, 3, 25, 22, 20, 0, 1, 9, 8 },
                [_]u8{ 0, 13, 0, 0, 0, 2, 11, 0, 9, 1, 0, 8, 3, 19, 4, 12, 24, 0, 5, 0, 0, 16, 0, 6, 0 },
                [_]u8{ 0, 0, 0, 14, 20, 0, 23, 0, 7, 0, 0, 5, 0, 25, 9, 17, 10, 0, 0, 0, 0, 2, 0, 0, 0 },
                [_]u8{ 6, 19, 18, 0, 0, 0, 0, 20, 10, 0, 2, 0, 24, 1, 0, 0, 0, 0, 11, 0, 13, 0, 7, 15, 0 },
                [_]u8{ 0, 5, 22, 0, 7, 0, 0, 0, 18, 6, 23, 15, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21 },
                [_]u8{ 0, 0, 0, 23, 0, 0, 10, 18, 0, 0, 0, 0, 0, 5, 0, 11, 7, 0, 0, 0, 12, 9, 0, 0, 0 },
                [_]u8{ 18, 0, 0, 0, 0, 0, 0, 0, 16, 15, 6, 20, 12, 24, 25, 0, 21, 19, 0, 0, 0, 8, 0, 0, 0 },
                [_]u8{ 21, 20, 0, 13, 12, 0, 2, 24, 8, 0, 1, 0, 0, 4, 0, 5, 0, 0, 18, 0, 0, 10, 17, 25, 0 },
                [_]u8{ 16, 17, 10, 0, 0, 11, 0, 0, 0, 3, 0, 0, 23, 0, 0, 22, 0, 25, 9, 0, 5, 0, 0, 0, 0 },
                [_]u8{ 0, 0, 24, 0, 0, 0, 0, 0, 5, 0, 22, 0, 17, 10, 19, 2, 20, 0, 0, 8, 14, 6, 0, 0, 0 },
                [_]u8{ 0, 0, 0, 0, 23, 9, 5, 8, 0, 0, 15, 10, 0, 18, 16, 24, 0, 13, 0, 3, 0, 1, 0, 0, 0 },
                [_]u8{ 0, 0, 8, 2, 0, 0, 0, 0, 13, 0, 12, 21, 7, 3, 0, 19, 9, 0, 0, 15, 22, 14, 0, 5, 6 },
                [_]u8{ 0, 1, 12, 9, 17, 0, 0, 0, 0, 0, 4, 19, 14, 0, 0, 8, 0, 0, 0, 10, 0, 23, 16, 0, 7 },
                [_]u8{ 3, 0, 11, 20, 0, 0, 22, 0, 0, 7, 0, 0, 0, 0, 1, 0, 0, 4, 0, 0, 0, 15, 12, 0, 0 },
                [_]u8{ 0, 0, 6, 25, 5, 0, 0, 12, 0, 19, 0, 0, 0, 0, 0, 7, 11, 23, 21, 0, 2, 0, 0, 0, 10 },
                [_]u8{ 14, 0, 21, 0, 0, 0, 8, 0, 2, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 19, 9, 0, 0, 18, 25 },
                [_]u8{ 20, 0, 5, 0, 1, 15, 0, 0, 0, 0, 0, 0, 8, 21, 0, 0, 0, 12, 0, 4, 17, 0, 0, 0, 0 },
                [_]u8{ 0, 0, 3, 0, 0, 0, 0, 10, 11, 0, 24, 25, 1, 0, 0, 0, 5, 0, 17, 0, 6, 21, 19, 8, 20 },
                [_]u8{ 12, 11, 0, 0, 0, 0, 0, 0, 3, 5, 0, 0, 18, 9, 14, 0, 16, 0, 2, 23, 1, 0, 22, 0, 0 },
                [_]u8{ 15, 0, 25, 22, 0, 18, 7, 6, 21, 9, 0, 12, 0, 13, 0, 0, 8, 1, 0, 0, 23, 0, 4, 14, 5 },
            },
        }, sudoku.Board(16){
            .cells = [16][16]u8{
                [_]u8{ 3, 16, 0, 4, 12, 0, 0, 11, 0, 13, 0, 0, 0, 0, 14, 0 },
                [_]u8{ 0, 8, 10, 0, 1, 0, 0, 14, 0, 0, 0, 0, 0, 0, 15, 2 },
                [_]u8{ 12, 0, 0, 11, 5, 0, 0, 0, 0, 0, 1, 0, 10, 0, 7, 3 },
                [_]u8{ 0, 0, 9, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 8, 6 },
                [_]u8{ 11, 0, 0, 0, 0, 0, 0, 0, 12, 0, 8, 14, 0, 6, 0, 0 },
                [_]u8{ 0, 7, 12, 1, 16, 0, 8, 0, 4, 0, 11, 10, 0, 0, 0, 9 },
                [_]u8{ 0, 5, 0, 0, 0, 1, 2, 3, 0, 6, 15, 0, 4, 0, 11, 0 },
                [_]u8{ 0, 0, 0, 8, 0, 11, 12, 15, 3, 5, 0, 0, 0, 0, 0, 0 },
                [_]u8{ 0, 0, 0, 12, 0, 13, 4, 9, 10, 7, 0, 0, 0, 0, 0, 0 },
                [_]u8{ 0, 11, 0, 0, 0, 8, 14, 5, 0, 4, 12, 0, 15, 0, 6, 0 },
                [_]u8{ 0, 14, 7, 2, 6, 0, 1, 0, 15, 0, 16, 3, 0, 0, 0, 13 },
                [_]u8{ 8, 0, 0, 0, 0, 0, 0, 0, 9, 0, 6, 1, 0, 3, 0, 0 },
                [_]u8{ 0, 0, 16, 0, 0, 0, 15, 0, 11, 0, 0, 0, 0, 0, 13, 14 },
                [_]u8{ 13, 0, 0, 9, 8, 0, 0, 0, 0, 0, 14, 0, 6, 0, 16, 10 },
                [_]u8{ 0, 3, 8, 0, 13, 0, 0, 2, 0, 0, 0, 0, 0, 0, 4, 5 },
                [_]u8{ 1, 10, 0, 7, 11, 0, 0, 4, 0, 16, 0, 0, 0, 0, 2, 0 },
            },
        },
        sudoku.Board(9){
            .cells = [9][9]u8{
                [_]u8{ 0, 0, 1, 0, 0, 4, 0, 0, 0 },
                [_]u8{ 0, 0, 5, 0, 0, 0, 0, 1, 6 },
                [_]u8{ 2, 0, 0, 0, 3, 0, 7, 0, 5 },
                [_]u8{ 0, 0, 0, 0, 1, 7, 3, 0, 0 },
                [_]u8{ 0, 3, 0, 0, 0, 0, 9, 8, 0 },
                [_]u8{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                [_]u8{ 6, 0, 7, 1, 0, 0, 0, 5, 0 },
                [_]u8{ 0, 0, 0, 0, 7, 0, 0, 0, 0 },
                [_]u8{ 0, 2, 0, 8, 0, 0, 6, 0, 0 },
            },
        },
        sudoku.Board(9){
            .cells = [9][9]u8{
                [_]u8{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                [_]u8{ 0, 0, 0, 1, 5, 8, 0, 0, 0 },
                [_]u8{ 0, 0, 0, 9, 0, 3, 0, 6, 1 },
                [_]u8{ 0, 0, 0, 3, 8, 1, 5, 9, 0 },
                [_]u8{ 2, 0, 0, 0, 0, 0, 3, 0, 0 },
                [_]u8{ 0, 0, 9, 0, 0, 0, 7, 0, 6 },
                [_]u8{ 0, 0, 7, 0, 0, 0, 0, 4, 0 },
                [_]u8{ 0, 3, 5, 0, 4, 0, 6, 0, 0 },
                [_]u8{ 0, 0, 0, 2, 0, 9, 0, 0, 0 },
            },
        },
    };

    var board = boards[1];
    board.initBoard();

    board.print();

    var timer = try std.time.Timer.start();

    _ = try board.solve();

    std.log.info("Solved in {}ms", .{timer.read() / 1_000_000});

    board.forcePrint();
}
