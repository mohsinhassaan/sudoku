const std = @import("std");
const sudoku = @import("root.zig");

pub const std_options = .{ .log_level = .info };

pub fn main() !void {
    const boards = .{
        sudoku.Board(25).init(&[25][25]u8{
            [_]u8{ 10, 0, 8, 0, 18, 0, 0, 0, 0, 5, 0, 20, 0, 0, 25, 22, 0, 0, 6, 17, 0, 0, 13, 14, 23 },
            [_]u8{ 0, 0, 15, 0, 0, 0, 21, 0, 12, 25, 19, 0, 1, 0, 9, 20, 0, 0, 0, 0, 0, 0, 2, 0, 11 },
            [_]u8{ 0, 3, 23, 0, 0, 0, 0, 0, 6, 22, 2, 0, 0, 0, 15, 11, 1, 24, 0, 0, 17, 25, 0, 0, 9 },
            [_]u8{ 0, 0, 14, 11, 0, 0, 0, 0, 9, 0, 12, 0, 5, 23, 0, 0, 0, 2, 0, 25, 18, 0, 0, 0, 0 },
            [_]u8{ 0, 0, 0, 0, 0, 10, 23, 19, 11, 0, 17, 13, 4, 0, 7, 0, 14, 0, 0, 0, 0, 0, 8, 0, 0 },
            [_]u8{ 0, 0, 0, 25, 12, 0, 24, 18, 0, 19, 0, 11, 0, 0, 0, 0, 0, 0, 1, 14, 0, 0, 17, 23, 0 },
            [_]u8{ 23, 22, 16, 10, 24, 0, 1, 0, 0, 0, 0, 0, 17, 19, 0, 2, 9, 0, 20, 0, 0, 18, 0, 3, 15 },
            [_]u8{ 0, 19, 4, 0, 13, 9, 6, 25, 0, 8, 22, 18, 7, 20, 0, 5, 0, 21, 0, 0, 0, 0, 12, 0, 0 },
            [_]u8{ 0, 5, 18, 0, 0, 0, 0, 20, 0, 0, 21, 0, 0, 25, 0, 13, 12, 17, 11, 15, 0, 6, 10, 0, 1 },
            [_]u8{ 14, 0, 0, 0, 20, 0, 12, 4, 0, 10, 6, 2, 0, 0, 1, 0, 23, 0, 0, 0, 13, 0, 5, 25, 21 },
            [_]u8{ 18, 0, 0, 0, 0, 21, 0, 2, 7, 0, 16, 3, 25, 0, 0, 0, 24, 0, 0, 0, 0, 0, 22, 4, 0 },
            [_]u8{ 0, 20, 0, 0, 16, 8, 0, 24, 0, 23, 1, 5, 0, 0, 0, 0, 13, 10, 0, 0, 3, 11, 0, 0, 0 },
            [_]u8{ 5, 0, 24, 0, 21, 20, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 3, 14, 0, 19, 0, 12 },
            [_]u8{ 0, 0, 0, 23, 19, 0, 0, 11, 25, 0, 0, 0, 0, 18, 21, 6, 0, 4, 0, 12, 16, 0, 0, 5, 0 },
            [_]u8{ 0, 10, 13, 0, 0, 0, 0, 0, 16, 0, 0, 0, 22, 7, 2, 0, 21, 23, 0, 1, 0, 0, 0, 0, 8 },
            [_]u8{ 13, 4, 5, 0, 8, 0, 0, 0, 17, 0, 18, 0, 0, 15, 10, 14, 0, 3, 12, 0, 22, 0, 0, 0, 7 },
            [_]u8{ 11, 0, 12, 24, 0, 19, 16, 22, 2, 6, 0, 1, 0, 0, 17, 0, 0, 9, 0, 0, 0, 0, 15, 13, 0 },
            [_]u8{ 0, 0, 17, 0, 0, 0, 0, 7, 0, 20, 0, 19, 21, 11, 13, 4, 0, 15, 22, 18, 5, 0, 23, 6, 0 },
            [_]u8{ 2, 7, 0, 19, 0, 0, 18, 0, 3, 9, 0, 25, 12, 0, 0, 0, 0, 0, 16, 0, 20, 24, 1, 17, 10 },
            [_]u8{ 0, 23, 9, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0, 2, 0, 21, 0, 1, 19, 0, 11, 3, 0, 0, 0 },
            [_]u8{ 0, 0, 20, 0, 0, 0, 0, 0, 24, 0, 25, 0, 9, 17, 18, 0, 2, 13, 23, 16, 0, 0, 0, 0, 0 },
            [_]u8{ 0, 0, 0, 0, 6, 25, 0, 13, 0, 0, 0, 16, 23, 0, 3, 0, 20, 0, 0, 0, 0, 14, 11, 0, 0 },
            [_]u8{ 7, 0, 0, 2, 9, 0, 0, 6, 14, 16, 13, 0, 0, 0, 20, 19, 3, 0, 0, 0, 0, 0, 25, 18, 0 },
            [_]u8{ 16, 0, 10, 0, 0, 0, 0, 0, 0, 1, 5, 0, 11, 0, 19, 17, 7, 0, 25, 0, 0, 0, 6, 0, 0 },
            [_]u8{ 25, 11, 19, 0, 0, 22, 15, 0, 0, 7, 14, 0, 0, 24, 0, 9, 0, 0, 0, 0, 1, 0, 21, 0, 3 },
        }),
        sudoku.Board(16).init(&[16][16]u8{
            [_]u8{ 3, 16, 0, 4, 12, 0, 0, 11, 0, 13, 0, 0, 0, 0, 14, 0 },
            [_]u8{ 0, 8, 10, 0, 1, 0, 0, 14, 0, 0, 0, 0, 0, 0, 15, 2 },
            [_]u8{ 12, 0, 0, 11, 5, 0, 0, 0, 0, 0, 1, 0, 10, 0, 7, 3 },
            [_]u8{ 0, 0, 9, 0, 0, 0, 10, 0, 16, 0, 0, 0, 0, 0, 8, 6 },
            [_]u8{ 11, 0, 0, 0, 0, 0, 0, 0, 12, 0, 8, 14, 0, 6, 0, 0 },
            [_]u8{ 0, 7, 12, 1, 16, 0, 8, 0, 4, 0, 11, 10, 0, 0, 0, 9 },
            [_]u8{ 0, 5, 0, 0, 0, 1, 2, 3, 0, 6, 15, 0, 4, 0, 11, 0 },
            [_]u8{ 0, 0, 0, 8, 0, 11, 12, 15, 3, 5, 0, 0, 0, 0, 0, 0 },
            [_]u8{ 0, 0, 0, 12, 0, 13, 4, 9, 10, 7, 0, 0, 0, 0, 0, 0 },
            [_]u8{ 0, 11, 0, 0, 0, 8, 14, 5, 0, 4, 12, 0, 15, 0, 6, 0 },
            [_]u8{ 0, 14, 7, 2, 6, 0, 1, 0, 15, 0, 16, 3, 0, 0, 0, 13 },
            [_]u8{ 8, 0, 0, 0, 0, 0, 0, 0, 9, 0, 6, 1, 0, 3, 0, 0 },
            [_]u8{ 0, 0, 16, 0, 0, 0, 15, 0, 11, 0, 0, 0, 0, 0, 13, 14 },
            [_]u8{ 13, 0, 0, 9, 8, 0, 0, 0, 0, 0, 14, 0, 6, 0, 16, 10 },
            [_]u8{ 0, 3, 8, 0, 13, 0, 0, 2, 0, 0, 0, 0, 0, 0, 4, 5 },
            [_]u8{ 1, 10, 0, 7, 11, 0, 0, 4, 0, 16, 0, 0, 0, 0, 2, 0 },
        }),
        sudoku.Board(9).init(&[9][9]u8{
            [_]u8{ 0, 0, 1, 0, 0, 4, 0, 0, 0 },
            [_]u8{ 0, 0, 5, 0, 0, 0, 0, 1, 6 },
            [_]u8{ 2, 0, 0, 0, 3, 0, 7, 0, 5 },
            [_]u8{ 0, 0, 0, 0, 1, 7, 3, 0, 0 },
            [_]u8{ 0, 3, 0, 0, 0, 0, 9, 8, 0 },
            [_]u8{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            [_]u8{ 6, 0, 7, 1, 0, 0, 0, 5, 0 },
            [_]u8{ 0, 0, 0, 0, 7, 0, 0, 0, 0 },
            [_]u8{ 0, 2, 0, 8, 0, 0, 6, 0, 0 },
        }),
        sudoku.Board(9).init(&[9][9]u8{
            [_]u8{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            [_]u8{ 0, 0, 0, 1, 5, 8, 0, 0, 0 },
            [_]u8{ 0, 0, 0, 9, 0, 3, 0, 6, 1 },
            [_]u8{ 0, 0, 0, 3, 8, 1, 5, 9, 0 },
            [_]u8{ 2, 0, 0, 0, 0, 0, 3, 0, 0 },
            [_]u8{ 0, 0, 9, 0, 0, 0, 7, 0, 6 },
            [_]u8{ 0, 0, 7, 0, 0, 0, 0, 4, 0 },
            [_]u8{ 0, 3, 5, 0, 4, 0, 6, 0, 0 },
            [_]u8{ 0, 0, 0, 2, 0, 9, 0, 0, 0 },
        }),
    };

    var board = boards[0];

    board.forcePrint();

    var timer = try std.time.Timer.start();

    _ = try board.solve();

    std.log.info("Solved in {}ms", .{timer.read() / 1_000_000});

    board.forcePrint();
}
